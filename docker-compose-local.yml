version: '3'
services:

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    volumes:
      - influxdb_storage:/var/lib/influxdb
    networks:
      - influxdb_business
      - influxdb_gf
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 80:3000
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: pass
    depends_on:
      - influxdb
    volumes:
      - gf_storage:/var/lib/grafana
      - ./Grafana/datasources:/etc/grafana/provisioning/datasources
      - ./Grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - influxdb_gf

  auth-server:
    build:
      context: .
      dockerfile: auth-server/Dockerfile
    container_name: auth-server
    environment:
      PYTHONUNBUFFERED: 1
      USERNAME_DB: admin
      PASSWORD_DB: admin
      DB_HOSTNAME: mongo
      DB_NAME: clients_db
      DB_PORT: 27017
    # restart: always
    ports:
      - "6001:6001"
    depends_on:
      - mongo
    networks:
      - mongo-auth
      - kong-auth

  io-service:
    build:
      context: .
      dockerfile: io-service/Dockerfile
    container_name: io-service
    environment:
      PYTHONUNBUFFERED: 1
      USERNAME_DB: admin
      PASSWORD_DB: admin
      DB_HOSTNAME: mongo
      DB_NAME: products_db
      DB_PORT: 27017
    restart: always
    ports:
      - "5001:5001"
    depends_on:
      - mongo
    networks:
      - mongo-io
      - business-io

  business-service:
    build:
      context: .
      dockerfile: business-service/Dockerfile
    container_name: business-service
    restart: always
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - "4001:4001"
    depends_on:
      - io-service
      - auth-server
    networks:
      - business-io
      - influxdb_business
      - kong-business

  mongo:
    image: mongo:latest
    hostname: mongo
    container_name: mongo
    volumes:
      - mongo_data:/data/db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: mongo
      MONGO_DATA_DIR: /data/db
    networks:
      - mongo-auth
      - mongo-io
      - mongo-network
    ports:
      - "27017:27017"


  mongo-gui:
    image: mongo-express:latest
    container_name: mongo-gui
    restart: always
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongo:27017/
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_SERVER: mongo
    networks:
      - mongo-network

  kong:
    image: kong:latest
    environment:
      KONG_DATABASE: 'off'
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    volumes:
      - ./kong/kong.yml:/usr/local/kong/declarative/kong.yml
    networks:
      - kong-business
      - kong-auth

volumes:
  mongo_data: {}
  db_data : {}
  gf_storage: {}
  influxdb_storage: {}

networks:
  kong-business:
  kong-auth:
  mongo-network:
  influxdb_gf:
  influxdb_business:
  mongo-auth:
  mongo-io:
  business-io: